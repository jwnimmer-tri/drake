# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load(
    "@drake//tools/vector_gen:vector_gen.bzl",
    "drake_cc_vector_gen_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "test_utilities",
    testonly = 1,
    deps = [
        ":my_vector",
        ":pack_value",
        ":scalar_conversion",
        ":vecs",
    ],
)

drake_cc_library(
    name = "pack_value",
    testonly = 1,
    hdrs = ["pack_value.h"],
    deps = [
        "//systems/framework:value",
    ],
)

drake_cc_library(
    name = "my_vector",
    testonly = 1,
    hdrs = ["my_vector.h"],
    deps = [
        "//common:essential",
        "//common:pointer_cast",
        "//systems/framework:vector",
    ],
)

drake_cc_library(
    name = "scalar_conversion",
    testonly = 1,
    hdrs = ["scalar_conversion.h"],
    deps = [
        "//common/test_utilities:is_dynamic_castable",
    ],
)

# From foo.named_vector, create gen/foo.{h,cc} (BasicVector subclasses).
drake_cc_vector_gen_library(
    name = "vecs",
    testonly = 1,
    srcs = [
        "vec1.named_vector",
        "vec2.named_vector",
        "vec3.named_vector",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "my_vector_test",
    deps = [
        ":my_vector",
        "//common:copyable_unique_ptr",
        "//common/test_utilities:is_dynamic_castable",
        "//systems/framework:value",
    ],
)

add_lint_tests()
