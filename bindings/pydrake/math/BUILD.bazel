# -*- python -*-

load("@drake//tools/install:install.bzl", "install")
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_binary",
    "drake_py_unittest",
)
load(
    "@drake//tools/skylark:pybind.bzl",
    "add_pybind_coverage_data",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
)
load("//bindings/pydrake:pydrake.bzl", "add_lint_tests_pydrake")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
# TODO(eric.cousineau): address
# https://github.com/RobotLocomotion/drake/issues/12055
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_pybind_library(
    name = "math",
    cc_deps = [
        "//bindings/pydrake:autodiff_types_pybind",
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake:symbolic_types_pybind",
        "//bindings/pydrake/common:cpp_template_pybind",
        "//bindings/pydrake/common:default_scalars_pybind",
        "//bindings/pydrake/common:deprecation_pybind",
        "//bindings/pydrake/common:eigen_geometry_pybind",
        "//bindings/pydrake/common:eigen_pybind",
        "//bindings/pydrake/common:type_pack",
        "//bindings/pydrake/common:value_pybind",
    ],
    cc_so_name = "__init__",
    cc_srcs = [
        "math_py.h",
        "math_py.cc",
        "math_py_bary_bspline.cc",
        "math_py_eigen_geometry.cc",
        "math_py_equation.cc",
        "math_py_gradient.cc",
        "math_py_matrix_util.cc",
        "math_py_overloads.cc",
        "math_py_rigid_transform.cc",
        "math_py_rotations.cc",
    ],
    package_info = PACKAGE_INFO,
    py_deps = [
        "//bindings/pydrake:autodiffutils_py",
        "//bindings/pydrake:symbolic_py",
        "//bindings/pydrake/common:value_py",
    ],
    py_srcs = ["_math_extra.py"],
)

install(
    name = "install",
    targets = [":math"],
    py_dest = PACKAGE_INFO.py_dest,
    deps = get_drake_py_installs([":math"]),
)

drake_pybind_library(
    name = "eigen_geometry_test_util_py",
    testonly = 1,
    add_install = False,
    cc_deps = ["//bindings/pydrake/common:eigen_geometry_pybind"],
    cc_so_name = "test/eigen_geometry_test_util",
    cc_srcs = ["test/eigen_geometry_test_util_py.cc"],
    package_info = PACKAGE_INFO,
    visibility = ["//visibility:private"],
)

drake_py_unittest(
    name = "eigen_geometry_test",
    deps = [
        ":eigen_geometry_test_util_py",
        ":math",
        "//bindings/pydrake/common/test_utilities",
    ],
)

drake_py_binary(
    name = "math_example",
    srcs = ["math_example.py"],
    add_test_rule = 1,
    isolate = 1,
    deps = [
        ":math",
    ],
)

drake_py_unittest(
    name = "math_test",
    deps = [
        ":math",
        "//bindings/pydrake/common/test_utilities",
    ],
)

drake_py_unittest(
    name = "math_overloads_test",
    deps = [
        ":math",
        "//bindings/pydrake:autodiffutils_py",
        "//bindings/pydrake:symbolic_py",
    ],
)

add_pybind_coverage_data()

add_lint_tests_pydrake()
